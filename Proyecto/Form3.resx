<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAJNQTFRF////
        BTONBjOOACOJpq3LACGIABaGACuKADCMsrrUAC6LACiJAB6HABiHACeJACWIABGD5OjxJEOUw8re3ODs
        AA6DKkmYusHZABuG+Pn8yc/h1droSmGjAAqClaDEcICyV2ung5C7YXOripe/e4m3NVCaUmelOVOb7e/1
        rLXRaXqwk5/EFDuR8vT5fIq4QlqfAACALI8frgAAGKNJREFUeF7lnWl7qrwWhhWEIINgncBZq1Zb2+7/
        /+tOgABZKwkEtHt4z/NhX92gyE2SNSVADytZbnffL/1/US/fu+0yYRwqLfa2PyKuwb7zb8lwyci3LwvG
        ItPAiQn79L8rErsDxoO17PsO+9TT5bgu8bwwDE3TpP96HnHdn/sxv79kTEC72U/8pENCKw4iMl8fT4fX
        7XYwGGy3r4fTcT13bDu2QuKyTz5TzmzHqCol55DtfZYom29H593HYjVmP4J1XS22uzfb9kPy7KtrnpHJ
        uRpPHYCOZ9lkv52o0KCuk+3RtS3vqZTEuLLDZ0r6z+srBrGi+26oB1dpvDjdI4s8z4q7Bt+K52e1oOPF
        9vHWlq7Q9XYM4qc1JTmzw1LtnjQGvZicpFashZZfbuyx4z0oszQ3yxnb9JCIHz6Ml2t5Cv2ndKpZcT79
        x/uFM5rVxhJttbhswiecVT8/2sBnGzrL9ckrsFxP0PXD9R82f34e3TwaXBD7/Mzmq7Q42w92VsfJjhOz
        /3YTmV1W2fn8hFaX2WOMcXrtL48cg0T7aX4yP6TpMXro/PbU2dvsPx3k6vMl49VyMrzRsHQwuA0ny9W1
        KZErNN1HD4xHO+ktO9sZJ3jT6J/X5eCwn49iO44ti2YWqSwrpv/3XvaHgU5gt3oLOpsKf9nbjtjfLWVY
        9yb7Ml4c1jSsNmmqJAvGDId4Jg3Ovw+NId7ibnUM50bb3q5bNyf2B/t1ucaDI7GtkU61wE3D9OOgnnLb
        0aySXe+7Syd37Eud/5uc+rbZKiFyiGn3TxP2fZmuF7tLV3XXvXuH5vdGNR108W77naJnx/OjY92BvS4D
        6qXH/mghJ3pX2sHlzvIfyIAM4vs7ZXCbvEcdrlx7QuKrOlMyuAded7xchhfct5/siFgTq/1obE0YXxQN
        ON09I1hO5YSbncLPJpfWEVhLQmemqNQt19GTsrpMJForOuugbcGsHSFx5T5+cg6eXTJzg7N8NEzddpey
        FaG1lvbQpQ5fWjAdjbJ66WiUlkvZdrUoo7Qdk3WrMKwFoREd2G8ATdf1caNDA5cg8ubr99PhI6uXfhxO
        7+u5FwU03Kn9qhutpePxELWwZ/qEzmbIfoBXsquJ/R3PCmbn3WAylbV9Mp0MTm+zoK6MSKKd7KvDjf5g
        1CZ0TdkQvMVKL0ws+366Nece0+HpblvKCMgLbuyDvFam9rjXJSR3SZg2fovl3cUZxaP3oX5h47rYecFI
        DmnEb5KQ9XrX9YyahN5c0lk+ZtILSX22c2if968OTiC3ku5MEuUnc02TqkcYfrPjchrPpSbN9a1T17LG
        6mTKq0/WXNKM33pVXi1C88IOymkgtaBe9P1YVWrxLY0c3EgSaVxMtrdWOoTmnh2S014yAg11tNVCafQn
        OXYsOwkdRA1CCeDUES+0Efqvqoi5nT5ffQmj54pXTwexmTAUu+hNEhuG8asiJO+g5DUWB5kTiX7j0jwW
        Gwk90ch8iSEF2Rye036FksNGcAdGdGJ7K303WtQmQjJnh6q0tti+Uk601yiZtdR1L+a71prtrDRv8osN
        hO4dd73PuRDFmPfnzDlhLe/CtRzNcVdJ7g3RTT2hY+K4ZOzia+Zu6qtuj+h1g0+fENxbrmZ9jFpLaGyw
        755a+HDW+fkdtNL4jJvR8bFJXW3koSNTLWGEs4lVjACd2Svb9VN6xXbbifFlH0Zsl1R1hBbOB1d47HuK
        nP+ZWmHf60T4Rw/CeOVUQ+hhwyUAyuKMH9AeVZ9ExHWNz1ATOi4yo1PcRTdbtuentd2wX2RyYjQWk5pZ
        XjXhDF2oMTIyTvAzPkKmJZp8cnxk3lbqxRZKwhgF858oCyf9n7ShWGP6e7wcF/nFgbKOqiIkOBp9gT8x
        wuvGfljJGQYaQqylnMpWEDoWAljDHzDF8OmntYZB9gidQaJaOqogjFA19gTtsXVk23+njugcUBg+UXhF
        OaH3zr7GdIPf9tHu36R3iIiTqXe5y5ASOiPYR6cwXbL+DCBGNCLoMxJ5sU5KaKNaiwO+av6JLprrCMZi
        vh6o0kK6rERGiO3oHjQ/HuK/VdDgeSimktpTCaFhw5QJuhp+1eYfEFwJi5z21ZZkGRJCC+Z7YzAInf7v
        9YNYCVhIaUQw7NhKQnCR0LmzjzPNQRIa/M5IRqZxwM4kk4sc/100NiJhAM3MB7gsm98Xi6q0BGE46nAL
        wJ9JIHTf2IdzjUFIG/+ubKJOW2AXZrBTvQlVG4EQ5V7gG9h2/SEB245aZCVENpgwXa7I6cZfL8ftTW/D
        Ji2EkTphezjdJPYKHPpWXegx/M3bFK75jWFos8ceAxPCOCEBsxM0Yxz8sprkb74R40vMdlX6hbN0KnDo
        uGqaCfzNXwOYDRoxuFpT3IiIEDXhjnew6aAemEazSADPf8O2c7IkM+Y225drU573xGebcpnUBwLzN4L3
        OOFGRIQz0ITgeripq9ciNByfz0+nAdvMaSRZ9AAJ/dKkSwh7Z948wH43Rek+JETx2pq/HJu07+kRGsAk
        LeAZZhISbCpI6JUtIyMc8y6DwDgSxW6Q0Abda8k3oZk5Hk1CY8Nd1o+QbeRlsp2cIKFD2GYpYe+Dn1ez
        gZdewQAcEGYdsRLfFViko0tYtUA6MNhGXpE4VQUJjXIwSwlB9FJz3oiw6vupJnx8EOWXSZfQiLOPZzIc
        to1XLAZHiDAsohU5IehgAShJLMACA56Q+jte/KUobKw+YUnwKTE05XnyQoRlw8gJgc1EjQj8JU84AnMQ
        S74JNyyh0iYsW6C3itkmoNEX210JERoz9psKwitvbGDt9oN3cjxhgZFrzTVhWJyPNmHlWG/Sr7ji1DIm
        LHymgrB34BJ+F5hTAM8RQgvO+0IjLuyCNmGVg32N2CaoEdtdCRMSVi1REX7yARf0ibzD4AihneHvUgjL
        7qtNWJmab5dtgUKFBCpMaAT5dhVh75VrRN54Q1vDEYZsd6aEa2jDLyMofcLSHci8IZUvGFOBkFkrJWHi
        c41YRXmpOPaK0AMV1i33maoJWxDaLPy+RmwDUnWihQRCZvmUhKARQ5C6nqoEqyKEHop3qJvKO7cnROdX
        CnarVAKh85JtVxN+ch0NFl+WVdZXElZRUireVfDnggktP5fYFQvCreKaIBdGJRCyY6gJezsuF4YOo5op
        KwlhJ+W/ypspROhOFrlEjoLw3WMbsLioJ5dImMPUEPIGH3aKqpuWhLCTcmMYeC5IyLX7Cg+3gvBFFrOl
        Kj5QSiTMnWoNIX/XlmGxbZmqbloQGjbblYm3tsCJIEIuzFuj+LoAkKS/uYRbb0TC3F/UESpPlB6NbS4I
        C/ea68g5Q5DnqAm3aCgyQln6mwsaPyoJYZxehTrCnll1NgImjEqEgtAC9RyuzA3Hp5pwYbGNTIwQb64E
        T4hKQphFr7WEnFuA3fBWFDoKwogPMSZc28OaSw0hPI+C8FXh8OmXc19QSULoGHR7LeGKM/qg348LI8QI
        oTfhLgyawWpNKE1/c22yD1SSEBo2teO1hPzMH+xuhUdnhHAnN/uBSkatCaXpb64ABMtywhSnnvBQZUrF
        QyJyFc3ECEF1b8wVOtAisraEn7LTZrKA7ZMTEuqq6glXXM2aXdVcQzYQGSHYN6iqPI7HtjG1JZSnv7m4
        cDeT9GIESQNhj5vbBruKdsoJYcjG+QqCose2hPL0NxeqPssJqZNrIHznzha4PBa45YTSXalwbbot4Ume
        /maCw0ZBSGOxBsKiN1LBhmKFnJwQeF9+GOI8tS2hIv3NRXsgLykh/YkGwit/uvxgYwlgTgg8CX9R0Hxw
        a8KaTkojFmjFpITU4i7rCflEDxgv5tVzQtBUnP2FToSqJeFYftZMMI5SEIbbJkLOewPfxvpiThixjZm4
        eF2YImpJiDoYEvK1ckL3e9VAWMZnKA/q5VFNRgjnUbklG9gptyVUpb+50IyKor39ITyIQDitAjcYmr5l
        3TcjBD6BNzQztq1US0Jl+puJ/zqVgpAcYeAnEPa46TQw3PJyYUYITCkXdjtwjpyqJaEy/c0Fp2dqx2wl
        kfBcmRpQwcuNaUYITBAX0cDCQKqWhMr0NxesK3Qm5EouYOciG6AZITDbB8XnM7UjVKe/uSxw/M6EfJvw
        xisPWTPC7HoX4uZ0xGd8tCMcKtPfXCPgjDoTcuMKRIK5RckJ2aZML1WvFkxpS8LXmpgtFTTunQk5Y+qA
        VWCZu0gJ+RPt9bjnr0QwrKJqR3hRp7+5wKXtTJhUNUUD5ELZPGJKCJa/JVy+hVInqnaEbr0ppR/ijXtn
        wl5lOfog1s0WHWaEvOfl3CFe+EfVirAu/c0FBnp3wnk1sMA1y6ZAU0KQO3E5M5x2zFRDKNbaljXpby5w
        tt0Juclc4BayRDclBPE1N6ch1PvqCHGuSwnhh2UCDrc7IZcEAxebxeQZIe9EcjeZScgs6ggPyG5SwlNt
        zJYKjIPuhFx2AQrfmWtPCUHBhMsOJUuz1IR3ZFUo4Vtd+puLn2voTsjleyAbyuYXM0I+LL1VAcIIrr9N
        pSTcYudOhzyyPTLR61CqOyG39sLkc84sMBUIuRAIbM+FhpbzznQWopfosz79zcV3qu6E3IQ12FsSgq0c
        oeRY2HgQL5fYH6OG9DcXfxG7Ew4UhBnLg4RK0Q6MZ6OohAvBO6oHCBXn/KOE7pnacPZ3qTtKZumF4KZn
        frANu49DtbydYF0Nshe/bldR1g+OQ0DSxpbWiP6SkP6GW7HIz6Uv3QmbbWlXf1ijYCWmv/4kESi48kJ3
        wkZ/2DmmqZElSX+jq9hzuavbnbAxpukcl6rlvQthHKWRFN+4pLw7YWNc2jm3UCtYiulv+jPC97nJlO6E
        jbkFIOEmOmBJIJMmoUudgJD+mtSgiaZmVhrT7oSN+WHnHF+p2TK92xEp60CCga0uenfCytD0wQ00ZY7P
        pwit6jQqmXQAi+nvLK3/znFYU03PdCbk6jSwUbKJ0JQQ1tq4Jm+qtSlkpiU0ccRlM3VCzli5pM6EXK0N
        Fl7KWlvneqlUZJYZrh1Gye/xv2EfUk3PdCZU1ksz8oywa83bcNjiy0rxL/YA4DPujvnBhDigMqadCbmw
        VFXz7jxvcV9OkFbF0BWGIbuMwvbS+nUm1Ji3AIFpm7knvHCrkpj+skqmMLNf+ujOhBpzT53nD9WEuHxa
        Fp2EUKc8486EGvOHneeA1YTCDWtFaCgsVixjxq6EOnPA6nl8uJagBaGQ6xaHErpvOT3TlVBnHr/zWgw1
        YR/HbGV3EGobxRJdRNgXaz+ZBEKttRhd19MoCRMhOiuHtBCRF94YEjrfitVGAqHWehpgTHlTAxqXSpdQ
        iLBp/0kyiZOKxeWFhO6bpJKVChPqrYmCi+i42/ca1rUpCcX0twwOhPpUmnOkQoTnsXyOHBPyXQ4E2GBd
        m3ptIkqCdQnF9FetIq5AhHPF9CMm1Fub2HV9qZIQ35tQp8JTCoRCaJsJE+qtL4VDlB+IIGTVJyTSy68Q
        W/AtEMqL5ohQd40wdAva67xVhGL6Wyf2zBuBsDdjfwMhQuU67yJaZYTwXDkPU79WX0XYPPvLi9XHRELp
        Qn9EyJlF2ExorX4fPI6IC77r77dQEcKPNYndFS0SCslkKki4qkK2+vstOt4zoyKU2wiVmAkUCT9l3RQS
        ct2t4Z4ZaGg5fwGf76BJKKS/tWKRk0gonUWGhNz72Brue4IXQPfeNRVhq2FIU8QsdZQQytanAsKh6kTp
        0djmgrDb/YcKwik82UblUbmEUHYgQNji/kM03vTuIVURCulvg/LYUEIoznNAwlb3kMLATe8+YBWh9Hkt
        NcqnZ2SEkuiPJ+QbovE+4C73cqsIcfrrEiRkQPLAX0YocawcYbt7uVE35aZV1ffjqwjRDWvu9xoJpX55
        MCIjlNgsjrDl/fgdnqmgIEyQGxPu2hbisWzBt5RQXAtfEYInkcFnKlS5A08IrS3fxatG1CJE6a9QKKBC
        RY4svpcSikarImz9XIz2zzZREKJgCwYTuVApI4uopITivHhJ2P7ZJnXPpykyDC1CZACrh/FUQh/JMhgp
        oZhploRfXBPqPZ8Grb3QeMaQghCdFOz9uVCVI5uekRPCX6QqCMEDzTSfMQTLHBrPiVIQIuMgztGJlSqf
        bpMTCvXVgrDLc6KQrWl+1pecEKe/+J7tVPjxWOnN8nJCYU6VES65QoT2s75aP69NTojuppOZUsFlpuGG
        ghDf0c8I+ZCk5rwRIX7mHn+ZzMxj6BCikSMzpYIxTU9bQbhCzZ0TvnIer+hgTOC0MWHL5ybKCVH6KzOl
        9AyhMU0DKgVhL4TNnRF2fm5i7bMv05/UIUQDR2ZKBWOazn6pCNHUf0YIOiJ8IHT9sy9R8Rs9v5T2Ux1C
        1KtkplSMe0w14QR+NL0d7LWqc1MnB8IZYGNTIUIUGzQ8g9ZH95tnmv4KgH6x7VAJ/tS498tmf2eKqmPD
        HQ8+gxaPxKbnCLOP/WYBf4eeIyw8eR4T/vefBf1/8Dzvv/6Z7BPeUfR96It0nskuzPuC5+oXcwx/Tk94
        rn7fgl3xX3o3AuxwuSSE/9D7LYIsgiul+34L7DH+e+8ooQE4CrT+nvfM8PH2A++Z+T94V5Dwvif0DsU/
        hPgOMlvh/ZNt3vdEv43Wzn7Bg/8N7+zy0dOk272zq+9UReBcFzDE/8h718AY7I+QOWz73jXBnuL37v7z
        786jISh0Nb1PENDTn/jX33+YZYNAV+Edlmis/qCEd1ha6PJ2eYclvUyoH/7n3kOKCzxp7oWO8/e8S1Y1
        CKlqCP+W9wG7yM89733Aok/t/dfe6az3Xu75T9rU8Rw3j2Ph2t0j7+WWvFv9Knm3+s81o9a71YWLDlVP
        +Kffjw/DGKqnvx9fEjvQ6AHGqFSOvX9+V73usV2jQ0IMFlGsJaqJsO+BWxgyfcFkKhXZfOGL+5g+Dxvh
        1I0ILBfJ9C1PKDg1EvZDHKGmxkvs+qP49XmRavIac1PYTI5g2ml/Ej+G1UzYN0W/PsXvrKcyQv/wnHb8
        pHyiefQccQJkLwxUURqEMsTePhDPwQg3O/Es2mq620j4DFn8tG9uQT3Cvil21N4gktkwL3p7bC5j8R3J
        RpYboVQn1UWjBTUJ+6FobqgzFmxqKteyTl1DudXJ9KW2XxpWfOu0oC5h35tLzMjHTHo6hhc4h/aQq4Mb
        yA2jO5NMIyfzRiuaS5OwT+44uqEav4H5xUrOKB69DyXfUOg63HmxvFRGR+CbpAGv9yY/WEiXsO+asma5
        xUKEU4hY9v10a7Y80+HpblvcM8ShRmh+MNfKaohkKmkT9p2NzIYku0h9MR3PCmbn3WAylbnKZDoZnN6i
        wPLUgSWJdrKvDjfqr2DpE9JkCueLmaZrqVUt5XimH0TefP1+OnxsB4PB9uNwel/PvSjwTa/2q669lvaB
        gxhUqdWGkIaF0rBleQ6a+4zjEm80CkMzDEcjj9SUHQq5wVke0a/rEl5BrQj7RJHTT940GNuJ8skrXSsh
        f6tXO0Ka00s8b6rlWuqpu4pE7NEMggY4529SS8J+P74oAmwabZktf1whRx39JRdlXVSl1oR9Ij4PhCkZ
        3APu2S/dROOF+1YVwU/8dj00VXtCmsW8K5qRDpKd5ZPukAbx/Z2yYJC8S7K2RvVeOpyPN5KuVcu1eLf9
        Gg+nluP50bHuwKMuI/2Fv3NIX459qQvJJl9921RGKTI5xLT7p7ppguvF7nLZ3DV4G2cLEVu6qLLUePBO
        ImvkNvcQw/Us2z0O6is9W7vjee56W2VgWS/DvNf0qEzjxWFt2zRwIVJQwyE03LHt78OwqY61uHP3GbZS
        uO0tpVmejpzgTSNHui4Hh+PcC+w49i0zl+XHsR14L/vDYKJRpFu9oamnFoqXvUS6gEFPbnTRrVok19Vy
        MbzRsHQwuA0Xy9VVaY+Rpvv6uLdW2bM1lZOnOiLR/vHKTJ2mx5rcpVnZiuBF6ygBiMzWXYsWzVpeZo/w
        0U6a2Qq4Hqi9iH1+rPqk0uLc0YCWYmuKBp1tTSHXJ6/6JQs9XT9ceVWqjYpXhIDlft3kjGaXJufRRovL
        JnzCWRVrxZfqaf4WIr6pDilbaXkyO0TYEs3K8znpVR4b5cXk9Cjk8ovET8o0Q24iB67afECOF0fHm4YX
        l+p6O9pxp6hdJrASNuk/rwhhECu67xoDMazx8HSPrAcyLyzXADHFJ1pz9KAcGkyT/YdOSEZ1nWyPxK4r
        KnYQ6SPrnpy1pjlayCGhb0fn3XaxUoGOV4vt7o0G52GrVEtHoWTd3altiUdLlNOKg4jM18fT4XWb1Uu3
        r4fTcT13bDu2QvLsIl0qZybOFlMt+w2rGh6R6xLPC8OQZhb0X48mVBoV045y/L7Kog+c+KnD8U/IILGr
        qHhmWuztePQjHed3yCWj2G6MrZLldrd+YV/5t/Sy3m2XyMD0ev8D737vXdvfgzoAAAAASUVORK5CYII=
</value>
  </data>
</root>